{% set version = "1.11.0" %}

package:
  name: katago
  version: {{ version }}

source:
  # use git_url, because katago needs a git repo to compile BUILD_DISTRIBUTED support;
  # this cannot (or rather: should not) be patch out, or even patched at all (-> dirty tag),
  # compare the exceedingly clear instructions/pleas here:
  # https://github.com/lightvector/KataGo/blob/master/Compiling.md#building-for-distributed
  git_url: https://github.com/lightvector/KataGo.git
  git_rev: v{{ version }}
  patches:
    # NOTE(hadim): conda-forge uses it's own build of Clang (rather than using the system's AppleClang)
    # But the package is assuming (vanilla) Clang is linux-only.
    - patches/osx-cmake.patch  # [osx]

build:
  number: 0
  string: cuda{{ cuda_compiler_version | replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
  # windows+CUDA needs to be fixed more comprehensively, see PR #1; skip for now
  skip: true  # [win and cuda_compiler_version != "None"]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - cmake
    - ninja
    - curl
  host:
    - cudnn  # [cuda_compiler_version != "None"]
    - nccl   # [linux and cuda_compiler_version != "None"]
    - zlib
    - libzip
    - eigen
    # necessary for BUILD_DISTRIBUTED
    - openssl
    - git
  run:
    - {{ pin_compatible('cudnn') }}  # [cuda_compiler_version != "None"]

test:
  commands:
    - katago
    - katago version
    - katago runtests  # [not osx]
    - katago runnnlayertests  # [cuda_compiler_version == "None"]

about:
  home: https://github.com/lightvector/KataGo
  summary: 'GTP engine and self-play learning in Go'
  license: MIT
  license_family: MIT
  license_file: LICENSE

extra:
  recipe-maintainers:
    - hadim
